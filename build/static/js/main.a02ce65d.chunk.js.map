{"version":3,"sources":["components/DesktopNav.jsx","components/MobileNav.jsx","components/Home.jsx","components/ProjectSection.jsx","components/Projects.jsx","components/Hobbies.jsx","components/Contact.jsx","components/Resume.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["DesktopNav","props","state","isHovered","Home","Projects","Hobbies","Contact","Resume","handleHover","bind","button","this","setState","prevState","className","data-target","linkUrl","map","value","index","key","linkName","onMouseEnter","onMouseLeave","to","linkIcon","Component","MobileNav","document","addEventListener","elems","querySelectorAll","M","Sidenav","init","id","src","href","ProjectSection","info","title","subtitle","liveSite","github","description","hsk","budge","getaway","App","routeComponent","path","exact","component","React","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a02ce65d.chunk.js","sourcesContent":["//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\n//==============================\n//       DEPENDENCIES\n//==============================\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass DesktopNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovered: {\n        Home: false,\n        Projects: false,\n        Hobbies: false,\n        Contact: false,\n        Resume: false\n      }\n    };\n    this.handleHover = this.handleHover.bind(this);\n  }\n\n  handleHover(button) {\n    switch (button) {\n      case \"Home\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Home: !prevState.isHovered[\"Home\"]\n          }\n        }));\n        break;\n      case \"Projects\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Projects: !prevState.isHovered[\"Projects\"]\n          }\n        }));\n        break;\n      case \"Hobbies\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Hobbies: !prevState.isHovered[\"Hobbies\"]\n          }\n        }));\n        break;\n      case \"Contact\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Contact: !prevState.isHovered[\"Contact\"]\n          }\n        }));\n        break;\n      case \"Resume\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Resume: !prevState.isHovered[\"Resume\"]\n          }\n        }));\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <nav>\n        <div className=\"nav-wrapper\">\n          <div\n            data-target=\"slide-out\"\n            className=\"sidenav-trigger hide-on-large-only\"\n          >\n            <i className=\"material-icons\">menu</i>\n          </div>\n          <ul className=\"hide-on-med-and-down\">\n            {this.props.linkUrl.map((value, index) => {\n              return (\n                <li\n                  key={this.props.linkName[index]}\n                  className=\"waves-effect waves-light nav-button\"\n                >\n                  <Link\n                    onMouseEnter={() => {\n                      this.handleHover(this.props.linkName[index]);\n                    }}\n                    onMouseLeave={() => {\n                      this.handleHover(this.props.linkName[index]);\n                    }}\n                    to={value}\n                  >\n                    {this.state.isHovered[this.props.linkName[index]] ? (\n                      <i className=\"material-icons\">\n                        {this.props.linkIcon[index]}\n                      </i>\n                    ) : (\n                      this.props.linkName[index]\n                    )}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default DesktopNav;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\n//==============================\n//       DEPENDENCIES\n//==============================\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass MobileNav extends Component {\n  componentDidMount() {\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      var elems = document.querySelectorAll(\".sidenav\");\n      var instances = M.Sidenav.init(elems, {});\n    });\n  }\n\n  render() {\n    return (\n      <ul id=\"slide-out\" className=\"sidenav\">\n        <li className=\"first-li\">\n          <img className=\"dirk\" src=\"/images/dirk.png\"></img>\n          <div className=\"user-view\">\n            <div className=\"logo\"></div>\n            <a href=\"#\">\n              <span className=\"white-text name center\">Joshua Kiley</span>\n            </a>\n            <a href=\"#\">\n              <span className=\"white-text name center\">SOFTWARE ENGINEER</span>\n            </a>\n          </div>\n        </li>\n        {this.props.linkUrl.map((value, index) => {\n          return (\n            <li>\n              <Link className=\"waves-effect\" to={value}>\n                <i className=\"material-icons\">{this.props.linkIcon[index]}</i>\n                {this.props.linkName[index]}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default MobileNav;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <main>\n        <section className=\"hero\">\n          <div className=\"hero-inner\">\n            <img className=\"avatar\" src=\"/images/avatar-work.jpg\"></img>\n            <h1>Joshua Kiley</h1>\n            <h2>SOFTWARE ENGINEER</h2>\n          </div>\n        </section>\n        <section>\n          <div>\n            <h1>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem et\n              nihil sapiente! Veritatis perspiciatis voluptatibus rerum saepe\n              blanditiis, quidem enim ullam nam, ratione aperiam laudantium\n              velit soluta nobis, possimus temporibus! Lorem ipsum dolor sit\n              amet, consectetur adipisicing elit. Adipisci doloribus repellat,\n              at autem sapiente consectetur! Temporibus veritatis, tenetur\n              accusantium asperiores vel in, recusandae tempora iure non harum\n              officia, aspernatur facilis!\n            </h1>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Home;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass ProjectSection extends Component {\n  render() {\n    return (\n      <section className=\"project-section\" id={this.props.info.id}>\n        <div className=\"project-main\">\n          <h1 className=\"project-title\">{this.props.info.title}</h1>\n          <h2 className=\"project-subtitle\">{this.props.info.subtitle}</h2>\n          <div className=\"project-links\">\n            <a\n              className=\"btn blue darken-1 white-text waves-effect\"\n              href={this.props.info.liveSite}\n            >\n              Live Site\n            </a>\n            <a\n              className=\"btn blue darken-1 white-text waves-effect\"\n              href={this.props.info.github}\n            >\n              Github\n            </a>\n          </div>\n          <p className=\"project-description\">{this.props.info.description}</p>\n          <a href=\"#projects\" className=\"btn black white-text waves-effect\">\n            top\n          </a>\n        </div>\n        <hr></hr>\n      </section>\n    );\n  }\n}\n\nexport default ProjectSection;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\nimport ProjectSection from \"./ProjectSection.jsx\";\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hsk: {\n        id: \"hskflashcard\",\n        title: \"HSK Flashcards\",\n        subtitle: \"A Simple App For Studying Chinese Vocabulary\",\n        liveSite: \"https://joshuakiley.github.io/\",\n        github: \"https://github.com/joshuakiley/joshuakiley.github.io\",\n        description:\n          \"A flashcard application to help people study Chinese vocabulary. This web app makes API calls using Ajax with Express.js, Node.js, JavaScript, accesses an external API for audio files as well as a local API for accessing vocabulary, phonetics, definitions, and examples. Some challenges I faced while building this application was to be able to save study data over different sessions without creating a database. To solve this I used browser local storage to keep track of vocabulary words that the user felt comfortable with and didn't need to study again. I also created an option for the user to return retired cards to the deck for review that would gather this information from local storage. My role in this project was as the sole developer and designer.\"\n      },\n      budge: {\n        id: \"budge\",\n        title: \"Budge: A Budgeting App\",\n        subtitle: \"Day to Day Budgeting.\",\n        liveSite: \"https://budgemanager.herokuapp.com/\",\n        github: \"https://github.com/joshuakiley/budge\",\n        description:\n          \"A budgeting application that helps users who have trouble with mid to long term budgeting by taking a user's income and expenses from the previous month and creating daily budgets for the current month. This web app uses Express.js, Node.js, MongoDB (a NoSQL database), JavaScript, and Materializecss (a CSS framework similar to Bootstrap that follows Google's Material Design principles). This app creates users, handles user login, and takes input from the user to create a monthly budget. Each monthly budget is a database that holds the user's income and expenses from the previous month, then creates a calendar for the current month. Each day in the calendar holds an itemized list of expenses and incomes and gives the difference to the user. The user can create new expenses on a day to day basis, the user can create new monthly budgets, the user can remove monthly budgets, and the user can view their daily and monthly savings. My role in this project was as the sole developer and designer.\"\n      },\n      getaway: {\n        id: \"getaway\",\n        title: \"Getaway\",\n        subtitle:\n          \"A trip planner for people who have an idea for a trip but aren't sure when they may want to go.\",\n        liveSite: \"http://getaway.surge.sh/\",\n        github: \"https://github.com/joshuakiley/getaway-frontend\",\n        description:\n          \"This web app was built by a group of people using React, Node.js, JavaScript, MongoDB (a NoSQL database), and Materializecss (a CSS framework similar to Bootstrap that follows Google's Material Design principles). It accesses an external API for flight prices and data. It creates a local database of user data that includes places the user would like to visit, possible activities that the user may want to partake in during the trip. This app handles user creation and user login.\"\n      }\n    };\n  }\n  render() {\n    return (\n      <main>\n        <section id=\"projects\" className=\"hero\">\n          <div className=\"hero-inner\">\n            <h1>PROJECTS</h1>\n            <div className=\"links\">\n              <a\n                href=\"#hskflashcard\"\n                className=\"link-button btn white black-text waves-effect\"\n              >\n                flashcards\n              </a>\n              <a\n                href=\"#budge\"\n                className=\"link-button btn white black-text waves-effect\"\n              >\n                budge\n              </a>\n              <a\n                href=\"#getaway\"\n                className=\"link-button btn white black-text waves-effect\"\n              >\n                getaway\n              </a>\n            </div>\n          </div>\n        </section>\n        <ProjectSection info={this.state.hsk} />\n        <ProjectSection info={this.state.budge} />\n        <ProjectSection info={this.state.getaway} />\n      </main>\n    );\n  }\n}\n\nexport default Projects;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Hobbies extends Component {\n  render() {\n    return (\n      <main>\n        <section className=\"hero\">\n          <div className=\"hero-inner\">\n            <h1>HOBBIES</h1>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Hobbies;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Contact extends Component {\n  render() {\n    return (\n      <main>\n        <section className=\"hero\">\n          <div className=\"hero-inner\">\n            <h1>CONTACT</h1>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Contact;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Resume extends Component {\n  render() {\n    return (\n      <main>\n        <section className=\"hero\">\n          <div className=\"hero-inner\">\n            <h1>RESUME</h1>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Resume;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <h1 className=\"center\">Footer</h1>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React from \"react\";\n\n// HEADER\nimport DesktopNav from \"./components/DesktopNav.jsx\";\nimport MobileNav from \"./components/MobileNav.jsx\";\n\n// PAGES\nimport Home from \"./components/Home.jsx\";\nimport Projects from \"./components/Projects.jsx\";\nimport Hobbies from \"./components/Hobbies.jsx\";\nimport Contact from \"./components/Contact.jsx\";\nimport Resume from \"./components/Resume.jsx\";\n\n// FOOTER\nimport Footer from \"./components/Footer.jsx\";\n\n//==============================\n//       DEPENDENCIES\n//==============================\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n//==============================\n//       STYLING\n//==============================\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      linkUrl: [\"/\", \"/projects\", \"/hobbies\", \"/contact\", \"/resume\"],\n      linkName: [\"Home\", \"Projects\", \"Hobbies\", \"Contact\", \"Resume\"],\n      linkIcon: [\"home\", \"work\", \"toys\", \"chat\", \"cake\"],\n      routeComponent: [Home, Projects, Hobbies, Contact, Resume]\n    };\n  }\n  render() {\n    return (\n      <Router>\n        {/* HEADER */}\n        <header>\n          <DesktopNav\n            linkUrl={this.state.linkUrl}\n            linkName={this.state.linkName}\n            linkIcon={this.state.linkIcon}\n          />\n          <MobileNav\n            linkUrl={this.state.linkUrl}\n            linkName={this.state.linkName}\n            linkIcon={this.state.linkIcon}\n          />\n        </header>\n        {/* MAIN */}\n        {this.state.routeComponent.map((value, index) => {\n          return (\n            <Route\n              key={index}\n              path={this.state.linkUrl[index]}\n              exact\n              component={value}\n            />\n          );\n        })}\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}