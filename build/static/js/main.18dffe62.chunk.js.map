{"version":3,"sources":["components/DesktopNav.jsx","components/MobileNav.jsx","components/Home.jsx","components/Button.jsx","components/ProjectImage.jsx","components/Portfolio.jsx","components/Blog.jsx","components/Contact.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["DesktopNav","props","state","isHovered","Home","Portfolio","Blog","Contact","Resume","handleHover","bind","button","this","setState","prevState","className","data-target","linkUrl","map","value","index","key","linkName","onMouseEnter","onMouseLeave","to","linkIcon","href","Component","MobileNav","document","addEventListener","elems","querySelectorAll","M","Sidenav","init","id","title","links","src","Button","url","name","ProjectImage","linkTitles","hsk","thumbnail","subtitle","liveSite","github","description","tech","obstacles","budge","getaway","App","routeComponent","path","exact","component","React","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18dffe62.chunk.js","sourcesContent":["//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\n//==============================\n//       DEPENDENCIES\n//==============================\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass DesktopNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovered: {\n        Home: false,\n        Portfolio: false,\n        Blog: false,\n        Contact: false,\n        Resume: false\n      }\n    };\n    this.handleHover = this.handleHover.bind(this);\n  }\n\n  handleHover(button) {\n    switch (button) {\n      case \"Home\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Home: !prevState.isHovered[\"Home\"]\n          }\n        }));\n        break;\n      case \"Portfolio\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Portfolio: !prevState.isHovered[\"Portfolio\"]\n          }\n        }));\n        break;\n      case \"Blog\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Blog: !prevState.isHovered[\"Blog\"]\n          }\n        }));\n        break;\n      case \"Contact\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Contact: !prevState.isHovered[\"Contact\"]\n          }\n        }));\n        break;\n      case \"Resume\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Resume: !prevState.isHovered[\"Resume\"]\n          }\n        }));\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <nav>\n        <div className=\"nav-wrapper\">\n          <div\n            data-target=\"slide-out\"\n            className=\"sidenav-trigger hide-on-large-only\"\n          >\n            <i className=\"material-icons\">menu</i>\n          </div>\n          <ul className=\"hide-on-med-and-down\">\n            {this.props.linkUrl.map((value, index) => {\n              return (\n                <li\n                  key={this.props.linkName[index]}\n                  className=\"waves-effect waves-light nav-button\"\n                >\n                  <Link\n                    onMouseEnter={() => {\n                      this.handleHover(this.props.linkName[index]);\n                    }}\n                    onMouseLeave={() => {\n                      this.handleHover(this.props.linkName[index]);\n                    }}\n                    to={value}\n                  >\n                    {this.state.isHovered[this.props.linkName[index]] ? (\n                      <i className=\"material-icons\">\n                        {this.props.linkIcon[index]}\n                      </i>\n                    ) : (\n                      this.props.linkName[index]\n                    )}\n                  </Link>\n                </li>\n              );\n            })}\n            <li className=\"waves-effect waves-light nav-button\">\n              <a\n                onMouseEnter={() => {\n                  this.handleHover(\"Resume\");\n                }}\n                onMouseLeave={() => {\n                  this.handleHover(\"Resume\");\n                }}\n                href=\"https://resume.creddle.io/resume/jdkgfnt8ko0\"\n                className\n              >\n                {this.state.isHovered[\"Resume\"] ? (\n                  <i className=\"material-icons\">cake</i>\n                ) : (\n                  \"Resume\"\n                )}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default DesktopNav;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\n//==============================\n//       DEPENDENCIES\n//==============================\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass MobileNav extends Component {\n  componentDidMount() {\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      var elems = document.querySelectorAll(\".sidenav\");\n      var instances = M.Sidenav.init(elems, {});\n    });\n  }\n\n  render() {\n    return (\n      <ul id=\"slide-out\" className=\"sidenav\">\n        {this.props.linkUrl.map((value, index) => {\n          return (\n            <li>\n              <Link className=\"waves-effect\" to={value}>\n                <i className=\"material-icons\">{this.props.linkIcon[index]}</i>\n                {this.props.linkName[index]}\n              </Link>\n            </li>\n          );\n        })}\n        <li>\n          <a href=\"https://resume.creddle.io/resume/jdkgfnt8ko0\">\n            <i className=\"material-icons\">cake</i>\n            Resume\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default MobileNav;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Joshua Kiley\",\n      links: null\n    };\n  }\n  render() {\n    return (\n      <div className=\"page-title\">\n        <img className=\"home-avatar\" src=\"images/avatar.jpg\"></img>\n        <h1>Joshua Kiley</h1>\n        <h2>Full Stack Developer</h2>\n        <p>\n          Whether it's a foreign language, an RPG, or a puzzle; finding the path\n          is all the fun.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Button extends Component {\n  render() {\n    return (\n      <a className=\"btn-large waves-effect custom-btn\" href={this.props.url}>\n        {this.props.name}\n      </a>\n    );\n  }\n}\n\nexport default Button;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass ProjectImage extends Component {\n  render() {\n    return <img className=\"project-image\" src={this.props.src}></img>;\n  }\n}\n\nexport default ProjectImage;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\nimport Button from \"./Button\";\nimport ProjecItmage from \"./ProjectImage\";\n\nclass Portfolio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Projects\",\n      links: [\"#hskflashcard\", \"#budge\", \"#getaway\"],\n      linkTitles: [\"Flashcards\", \"Budge\", \"Getaway\"],\n      hsk: {\n        id: \"hskflashcard\",\n        thumbnail: \"/images/hsk.png\",\n        title: \"HSK\",\n        subtitle: \"The HSK is the official Chinese language exam in China.\",\n        liveSite: \"https://joshuakiley.github.io/\",\n        github: \"https://github.com/joshuakiley/joshuakiley.github.io\",\n        description: [\n          \"Toward the end of my stay in China I needed to pass the HSK in order to qualify for a temporary residence visa, so I made this webapp modeled after the simple flashcard exercises I would use with my students to help them learn English.\",\n          \"We use the official HSK vocabulary list, which includes Chinese vocabulary, English translations, and phonetics (拼音). For the pronunciation audio files I pull from a reliable API accessing www.forvo.com. Forvo is a website that crowd-sources pronunciation of many languages and dialects around the world.\",\n          \"This app allows you to choose the number of cards you want to study in any given session. It allows you to choose the HSK level you want to study. It also allows you to retire cards that you’re sure you know.\",\n          \"Future releases of this application will focus on migrating from Express to either React or Angular. The localstorage system for storing retired cards will be replaced with a NoSQL database run on Google Firebase. Sign-in through Google Firebase.\",\n          \"I am the sole developer of this project.\"\n        ],\n        tech: [\n          \"HTML\",\n          \"CSS\",\n          \"JavaScript\",\n          \"MaterializeCSS\",\n          \"Express\",\n          \"Node\",\n          \"3rd party API calls using AJAX\"\n        ],\n        obstacles: [\n          \"One of the obstacles that I came across while developing this application is that I would have preferred to have built it in React now that I know how to use React.\",\n          \"Another issue was that I wanted to app to be small and contained, so rather than make a database to store user study information I used localstorage in the browser to contain this information. I would like to change this in the future by adding a login and a database (I haven’t decided on SQL or NoSQL yet).\"\n        ]\n      },\n      budge: {\n        id: \"budge\",\n        thumbnail: \"/images/budge.png\",\n        title: \"Budge\",\n        subtitle: \"Day to Day Budgeting.\",\n        liveSite: \"https://budgemanager.herokuapp.com/\",\n        github: \"https://github.com/joshuakiley/budge\",\n        description: [\n          \"During college and when I first moved out on my own I had trouble budgeting long-term, over the course of the year, or even month to month. So I designed my budget spreadsheets on a day to day basis to help me develop better budgeting skills.\",\n          \"This app takes your income and your expenses and it divides them among the days in the pay period so that you can easily see how much money you can spend in a day before you start eating into your savings.\",\n          \"The app asks users to create an account, and will ask users to input their income and expenses for the previous pay period, then ask them the length of the next pay period. All of this data is stored in a NoSQL database.\",\n          \"Future releases of this application will be ported to either Angular or React. The NoSQL database and sign in authorization will be run through Google Firebase for security.\",\n          \"I am the sole developer for this project.\"\n        ],\n        tech: [\n          \"HTML\",\n          \"CSS\",\n          \"JavaScript\",\n          \"MaterializeCSS\",\n          \"Express\",\n          \"Node\",\n          \"Mongoose\",\n          \"MongoDB\",\n          \"RESTful Routes\"\n        ],\n        obstacles: [\n          \"An issue that I had while developing this was ensuring that the math was being done correctly. In the future I hope to implement Dinero.js in order to add features like proper currency conversion and ensuring that the math is up to banking standards.\",\n          \"Another issue that I had while implementing this was creating a graphical date picker. Due to time constraints I forewent this feature for manual date input. I will add the graphical date picker once I migrate the app to either Angular or React.\"\n        ]\n      },\n      getaway: {\n        id: \"getaway\",\n        thumbnail: \"/images/getaway.png\",\n        title: \"Getaway\",\n        subtitle:\n          \"A trip planner for people who have an idea for a trip but aren't sure when they may want to go.\",\n        liveSite: \"http://getaway.surge.sh/\",\n        github: \"https://github.com/joshuakiley/getaway-frontend\",\n        description: [\n          \"This web app was built by a group of people using React, Node.js, JavaScript, MongoDB (a NoSQL database), and Materializecss (a CSS framework similar to Bootstrap that follows Google's Material Design principles). It accesses an external API for flight prices and data. It creates a local database of user data that includes places the user would like to visit, possible activities that the user may want to partake in during the trip. This app handles user creation and user login.\"\n        ],\n        tech: [\n          \"HTML\",\n          \"CSS\",\n          \"JavaScript\",\n          \"MaterializeCSS\",\n          \"React\",\n          \"Node\",\n          \"Mongoose\",\n          \"MongoDB\",\n          \"3rd party API calls using AJAX\"\n        ],\n        obstacles: [\n          \"One of the obstacles that I came across while developing this application is that I would have preferred to have built it in React now that I know how to use React.\",\n          \"Another issue was that I wanted to app to be small and contained, so rather than make a database to store user study information I used localstorage in the browser to contain this information. I would like to change this in the future by adding a login and a database (I haven’t decided on SQL or NoSQL yet).\"\n        ]\n      }\n    };\n  }\n  render() {\n    return (\n      <div className=\"page-container\">\n        <div className=\"page-title\">\n          <h1>Portfolio</h1>\n          <p>These are some of the websites that I've created and deployed.</p>\n        </div>\n        <div className=\"project-list\">\n          <div className=\"project\">\n            <h3>HSK Flashcards</h3>\n            <div>\n              <ProjecItmage src={this.state.hsk.thumbnail} />\n            </div>\n            <Button name=\"Live Site\" url={this.state.hsk.liveSite} />\n            <Button name=\"GitHub\" url={this.state.hsk.github} />\n          </div>\n          <div className=\"project\">\n            <h3>Budge</h3>\n            <div>\n              <ProjecItmage src={this.state.budge.thumbnail} />\n            </div>\n            <Button name=\"Live Site\" url={this.state.budge.liveSite} />\n            <Button name=\"GitHub\" url={this.state.budge.github} />\n          </div>\n          <div className=\"project\">\n            <h3>Getaway</h3>\n            <div>\n              <ProjecItmage src={this.state.getaway.thumbnail} />\n            </div>\n            <Button name=\"Live Site\" url={this.state.getaway.liveSite} />\n            <Button name=\"GitHub\" url={this.state.getaway.github} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Portfolio;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Blog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Hobbies\",\n      links: null\n    };\n  }\n  render() {\n    return (\n      <div className=\"page-container\">\n        <div className=\"page-title\">\n          <h1>Let's Talk About That</h1>\n          <p>\n            There are some of the adventures and experiences I've had. I will be\n            writing more in the not so distant future.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\nimport Button from \"./Button\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"Contact\",\n      links: null\n    };\n  }\n  render() {\n    return (\n      <div className=\"page-container\">\n        <div className=\"page-title\">\n          <h1>Come Say Hey</h1>\n          <p>Add me on LinkedIn or GitHub if you've got any project ideas.</p>\n          <p>I'm always open to partnerships and colaboration.</p>\n          <p>P.S. I'm a huge fan of open-source.</p>\n          <Button\n            name=\"LinkedIn\"\n            url=\"https://www.linkedin.com/in/joshua-kiley/\"\n          />\n          <Button name=\"GitHub\" url=\"https://github.com/joshuakiley\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <h1 className=\"center\">Footer</h1>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React from \"react\";\n\n// HEADER\nimport DesktopNav from \"./components/DesktopNav.jsx\";\nimport MobileNav from \"./components/MobileNav.jsx\";\n\n// PAGES\nimport Home from \"./components/Home.jsx\";\nimport Portfolio from \"./components/Portfolio.jsx\";\nimport Blog from \"./components/Blog.jsx\";\nimport Contact from \"./components/Contact.jsx\";\n\n// FOOTER\nimport Footer from \"./components/Footer.jsx\";\n\n//==============================\n//       DEPENDENCIES\n//==============================\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n//==============================\n//       STYLING\n//==============================\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      linkUrl: [\"/\", \"/portfolio\", \"/blog\", \"/contact\"],\n      linkName: [\"Home\", \"Portfolio\", \"Blog\", \"Contact\"],\n      linkIcon: [\"home\", \"work\", \"toys\", \"chat\"],\n      routeComponent: [Home, Portfolio, Blog, Contact]\n    };\n  }\n  render() {\n    return (\n      <Router>\n        <header>\n          <DesktopNav\n            linkUrl={this.state.linkUrl}\n            linkName={this.state.linkName}\n            linkIcon={this.state.linkIcon}\n          />\n          <MobileNav\n            linkUrl={this.state.linkUrl}\n            linkName={this.state.linkName}\n            linkIcon={this.state.linkIcon}\n          />\n        </header>\n        <main>\n          {this.state.routeComponent.map((value, index) => {\n            return (\n              <Route\n                key={index}\n                path={this.state.linkUrl[index]}\n                exact\n                component={value}\n              />\n            );\n          })}\n        </main>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}