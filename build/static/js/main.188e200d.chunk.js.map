{"version":3,"sources":["components/DesktopNav.jsx","components/MobileNav.jsx","components/Home.jsx","components/Projects.jsx","components/Hobbies.jsx","components/Contact.jsx","components/Resume.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["DesktopNav","props","state","isHovered","Home","Projects","Hobbies","Contact","Resume","handleHover","bind","button","this","setState","prevState","className","data-target","linkUrl","map","value","index","key","linkName","onMouseEnter","onMouseLeave","to","linkIcon","Component","MobileNav","document","addEventListener","elems","querySelectorAll","M","Sidenav","init","id","src","href","App","routeComponent","path","exact","component","React","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.188e200d.chunk.js","sourcesContent":["//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\n//==============================\n//       DEPENDENCIES\n//==============================\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass DesktopNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovered: {\n        Home: false,\n        Projects: false,\n        Hobbies: false,\n        Contact: false,\n        Resume: false\n      }\n    };\n    this.handleHover = this.handleHover.bind(this);\n  }\n\n  handleHover(button) {\n    switch (button) {\n      case \"Home\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Home: !prevState.isHovered[\"Home\"]\n          }\n        }));\n        break;\n      case \"Projects\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Projects: !prevState.isHovered[\"Projects\"]\n          }\n        }));\n        break;\n      case \"Hobbies\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Hobbies: !prevState.isHovered[\"Hobbies\"]\n          }\n        }));\n        break;\n      case \"Contact\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Contact: !prevState.isHovered[\"Contact\"]\n          }\n        }));\n        break;\n      case \"Resume\":\n        this.setState(prevState => ({\n          isHovered: {\n            ...prevState.isHovered,\n            Resume: !prevState.isHovered[\"Resume\"]\n          }\n        }));\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <nav>\n        <div className=\"nav-wrapper\">\n          <div\n            data-target=\"slide-out\"\n            className=\"sidenav-trigger hide-on-large-only\"\n          >\n            <i className=\"material-icons\">menu</i>\n          </div>\n          <ul className=\"hide-on-med-and-down\">\n            {this.props.linkUrl.map((value, index) => {\n              return (\n                <li\n                  key={this.props.linkName[index]}\n                  className=\"waves-effect waves-light nav-button\"\n                >\n                  <Link\n                    onMouseEnter={() => {\n                      this.handleHover(this.props.linkName[index]);\n                    }}\n                    onMouseLeave={() => {\n                      this.handleHover(this.props.linkName[index]);\n                    }}\n                    to={value}\n                  >\n                    {this.state.isHovered[this.props.linkName[index]] ? (\n                      <i className=\"material-icons\">\n                        {this.props.linkIcon[index]}\n                      </i>\n                    ) : (\n                      this.props.linkName[index]\n                    )}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default DesktopNav;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\n//==============================\n//       DEPENDENCIES\n//==============================\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass MobileNav extends Component {\n  componentDidMount() {\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      var elems = document.querySelectorAll(\".sidenav\");\n      var instances = M.Sidenav.init(elems, {});\n    });\n  }\n\n  render() {\n    return (\n      <ul id=\"slide-out\" className=\"sidenav\">\n        <li className=\"first-li\">\n          <img className=\"dirk\" src=\"/images/dirk.png\"></img>\n          <div className=\"user-view\">\n            <div className=\"logo\"></div>\n            <a href=\"#\">\n              <span className=\"white-text name center\">Joshua Kiley</span>\n            </a>\n            <a href=\"#\">\n              <span className=\"white-text name center\">SOFTWARE ENGINEER</span>\n            </a>\n          </div>\n        </li>\n        {this.props.linkUrl.map((value, index) => {\n          return (\n            <li>\n              <Link className=\"waves-effect\" to={value}>\n                <i className=\"material-icons\">{this.props.linkIcon[index]}</i>\n                {this.props.linkName[index]}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default MobileNav;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <main>\n        <section className=\"hero\">\n          <div className=\"hero-inner\">\n            <h1>Joshua Kiley</h1>\n            <h2>SOFTWARE ENGINEER</h2>\n          </div>\n        </section>\n        <section className=\"hero\">\n          <div className=\"hero-inner\">\n            <h1>ABOUT ME</h1>\n            <h2>all of the things</h2>\n            <p>\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\n              Architecto nemo, laboriosam vero veniam voluptatibus ut eos, error\n              amet dicta distinctio excepturi consequuntur ipsa, ratione atque\n              quibusdam. Nobis labore maxime nulla!\n            </p>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Home;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Projects extends Component {\n  render() {\n    return (\n      <main>\n        <section className=\"hero\">\n          <div className=\"hero-inner\">\n            <h1>PROJECTS</h1>\n            <div className=\"links\">\n              <a className=\"btn green darken-4 waves-light waves-effect\">\n                hsk flashcards\n              </a>\n              <a className=\"btn green darken-4 waves-light waves-effect\">\n                budge\n              </a>\n              <a className=\"btn green darken-4 waves-light waves-effect\">\n                getaway\n              </a>\n            </div>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Projects;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Hobbies extends Component {\n  render() {\n    return (\n      <main>\n        <section className=\"hero\">\n          <div className=\"hero-inner\">\n            <h1>HOBBIES</h1>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Hobbies;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Contact extends Component {\n  render() {\n    return (\n      <main>\n        <section className=\"hero\">\n          <div className=\"hero-inner\">\n            <h1>CONTACT</h1>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Contact;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Resume extends Component {\n  render() {\n    return (\n      <main>\n        <section className=\"hero\">\n          <div className=\"hero-inner\">\n            <h1>RESUME</h1>\n          </div>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Resume;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <h1 className=\"center\">Footer</h1>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","//==============================\n//       COMPONENTS\n//==============================\nimport React from \"react\";\n\n// HEADER\nimport DesktopNav from \"./components/DesktopNav.jsx\";\nimport MobileNav from \"./components/MobileNav.jsx\";\n\n// PAGES\nimport Home from \"./components/Home.jsx\";\nimport Projects from \"./components/Projects.jsx\";\nimport Hobbies from \"./components/Hobbies.jsx\";\nimport Contact from \"./components/Contact.jsx\";\nimport Resume from \"./components/Resume.jsx\";\n\n// FOOTER\nimport Footer from \"./components/Footer.jsx\";\n\n//==============================\n//       DEPENDENCIES\n//==============================\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n//==============================\n//       STYLING\n//==============================\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      linkUrl: [\"/\", \"/projects\", \"/hobbies\", \"/contact\", \"/resume\"],\n      linkName: [\"Home\", \"Projects\", \"Hobbies\", \"Contact\", \"Resume\"],\n      linkIcon: [\"home\", \"work\", \"toys\", \"chat\", \"cake\"],\n      routeComponent: [Home, Projects, Hobbies, Contact, Resume]\n    };\n  }\n  render() {\n    return (\n      <Router>\n        {/* HEADER */}\n        <header>\n          <DesktopNav\n            linkUrl={this.state.linkUrl}\n            linkName={this.state.linkName}\n            linkIcon={this.state.linkIcon}\n          />\n          <MobileNav\n            linkUrl={this.state.linkUrl}\n            linkName={this.state.linkName}\n            linkIcon={this.state.linkIcon}\n          />\n        </header>\n\n        {/* MAIN */}\n        {this.state.routeComponent.map((value, index) => {\n          return (\n            <Route\n              key={index}\n              path={this.state.linkUrl[index]}\n              exact\n              component={value}\n            />\n          );\n        })}\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"materialize-css/dist/css/materialize.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}